{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../navbar/navbar.component\";\nfunction NewTaskComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nexport class NewTaskComponent {\n  constructor(taskService, router, authService) {\n    this.taskService = taskService;\n    this.router = router;\n    this.authService = authService;\n    this.task = {\n      name: '',\n      description: '',\n      created_at: new Date(),\n      due_date: new Date()\n    };\n  }\n  ngOnInit() {\n    this.userId = this.authService.getUserId();\n  }\n  onSubmit() {\n    if (this.userId !== null) {\n      this.task.user_id = this.userId;\n    }\n    this.taskService.newTask(this.task).subscribe({\n      next: response => {\n        console.log(response);\n        this.router.navigate(['/accueil']);\n      },\n      error: error => {\n        console.error(\"Une erreur s'est produite : \", error.error.error);\n        this.error = error.error.error;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function NewTaskComponent_Factory(t) {\n    return new (t || NewTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewTaskComponent,\n    selectors: [[\"app-new-task\"]],\n    decls: 31,\n    vars: 4,\n    consts: [[1, \"vh-100\", \"bg-image\"], [1, \"mask\", \"d-flex\", \"align-items-center\", \"h-100\", \"gradient-custom-3\"], [1, \"container\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-9\", \"col-lg-7\", \"col-xl-6\"], [\"class\", \"font-weight-bold text-danger\", 4, \"ngIf\"], [1, \"card\", 2, \"border-radius\", \"15px\"], [1, \"card-body\", \"p-5\"], [1, \"text-uppercase\", \"text-center\", \"mb-5\"], [\"name\", \"newTask\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", \"name\", \"name\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"description\", \"required\", \"\", \"id\", \"name\", \"name\", \"description\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"due_date\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"due_date\", \"required\", \"\", \"name\", \"due_date\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-block\", \"btn-lg\", \"gradient-custom-4\", \"text-body\"], [1, \"font-weight-bold\", \"text-danger\"]],\n    template: function NewTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"section\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵtemplate(7, NewTaskComponent_div_7_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"h2\", 8);\n        i0.ɵɵtext(11, \"Nouvelle T\\u00E2che\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"form\", 9, 10);\n        i0.ɵɵlistener(\"ngSubmit\", function NewTaskComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Nom de la t\\u00E2che\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function NewTaskComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.task.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Description de la t\\u00E2che\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function NewTaskComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.task.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 11)(23, \"label\", 16);\n        i0.ɵɵtext(24, \"Date d'\\u00E9ch\\u00E9ance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function NewTaskComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.task.due_date = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 18)(27, \"button\", 19);\n        i0.ɵɵtext(28, \" Ajouter \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(29, \"br\")(30, \"br\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.due_date);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.NavbarComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;IAOUA,+BAAwD;IACtDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,6CACF;;;ACEV,OAAM,MAAOC,gBAAgB;EAS3BC,YACUC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAFxB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAXrB,SAAI,GAAS;MACXC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,IAAIC,IAAI,EAAE;MACtBC,QAAQ,EAAE,IAAID,IAAI;KACnB;EAOE;EACHE,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,WAAW,CAACQ,SAAS,EAAE;EAC5C;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACF,MAAM,KAAK,IAAI,EAAE;MACxB,IAAI,CAACG,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,MAAM;;IAEjC,IAAI,CAACT,WAAW,CAACc,OAAO,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC;MAC5CC,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QAErB,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACpC,CAAC;MACDC,KAAK,EAAGA,KAAU,IAAI;QACpBH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACA,KAAK,CAACA,KAAK,CAAC;QAChE,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,CAACA,KAAK;MAChC;KACD,CAAC;EACJ;EAAC;qBAjCUvB,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAwB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDX7B7B,6BAAyB;QACzBA,kCAAiC;QAKvBA,qBAAM;QACNA,iEAEM;QACNA,8BAA8C;QAEEA,oCAAc;QAAAA,iBAAK;QAC/DA,oCAAyD;QAAxBA;UAAA,OAAY8B,cAAU;QAAA,EAAC;QACtD9B,gCAA+B;QACQA,qCAAe;QAAAA,iBAAQ;QAC5DA,kCAOE;QAHAA;UAAA;QAAA,EAAuB;QAJzBA,iBAOE;QAGJA,gCAA+B;QAE1BA,6CAAuB;QAAAA,iBACzB;QACDA,kCAQE;QAHAA;UAAA;QAAA,EAA8B;QALhCA,iBAQE;QAGJA,gCAA+B;QAE1BA,0CAAe;QAAAA,iBACjB;QACDA,kCAOE;QAHAA;UAAA;QAAA,EAA2B;QAJ7BA,iBAOE;QAGJA,gCAA2C;QAKvCA,0BACF;QAAAA,iBAAS;QAKjBA,sBAAM;QACRA,iBAAM;;;QA5DEA,eAAW;QAAXA,gCAAW;QAaPA,gBAAuB;QAAvBA,uCAAuB;QAevBA,eAA8B;QAA9BA,8CAA8B;QAc9BA,eAA2B;QAA3BA,2CAA2B","names":["i0","NewTaskComponent","constructor","taskService","router","authService","name","description","created_at","Date","due_date","ngOnInit","userId","getUserId","onSubmit","task","user_id","newTask","subscribe","next","response","console","log","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\testJPM\\frontend\\todo\\src\\app\\new-task\\new-task.component.html","D:\\testJPM\\frontend\\todo\\src\\app\\new-task\\new-task.component.ts"],"sourcesContent":["<app-navbar></app-navbar>\n<section class=\"vh-100 bg-image\">\n  <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n          <br />\n          <div *ngIf=\"error\" class=\"font-weight-bold text-danger\">\n            {{ error }}\n          </div>\n          <div class=\"card\" style=\"border-radius: 15px\">\n            <div class=\"card-body p-5\">\n              <h2 class=\"text-uppercase text-center mb-5\">Nouvelle Tâche</h2>\n              <form name=\"newTask\" #f=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-outline mb-4\">\n                  <label class=\"form-label\" for=\"name\">Nom de la tâche</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    required\n                    [(ngModel)]=\"task.name\"\n                    name=\"name\"\n                    class=\"form-control form-control-lg\"\n                  />\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <label class=\"form-label\" for=\"description\"\n                    >Description de la tâche</label\n                  >\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    required\n                    id=\"name\"\n                    [(ngModel)]=\"task.description\"\n                    name=\"description\"\n                    class=\"form-control form-control-lg\"\n                  />\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <label class=\"form-label\" for=\"due_date\"\n                    >Date d'échéance</label\n                  >\n                  <input\n                    type=\"date\"\n                    id=\"due_date\"\n                    required\n                    [(ngModel)]=\"task.due_date\"\n                    name=\"due_date\"\n                    class=\"form-control form-control-lg\"\n                  />\n                </div>\n\n                <div class=\"d-flex justify-content-center\">\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-success btn-block btn-lg gradient-custom-4 text-body\"\n                  >\n                    Ajouter\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <br /><br />\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component } from '@angular/core';\nimport { Task } from '../model';\nimport { TaskService } from '../_services/task.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.css'],\n})\nexport class NewTaskComponent {\n  task: Task = {\n    name: '',\n    description: '',\n    created_at: new Date(),\n    due_date: new Date(),\n  };\n  userId!: number | null;\n  error: any;\n  constructor(\n    private taskService: TaskService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n  ngOnInit(): void {\n    this.userId = this.authService.getUserId();\n  }\n\n  onSubmit() {\n    if (this.userId !== null) {\n      this.task.user_id = this.userId;\n    }\n    this.taskService.newTask(this.task).subscribe({\n      next: (response: any) => {\n        console.log(response);\n\n        this.router.navigate(['/accueil']);\n      },\n      error: (error: any) => {\n        console.error(\"Une erreur s'est produite : \", error.error.error);\n        this.error = error.error.error;\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}