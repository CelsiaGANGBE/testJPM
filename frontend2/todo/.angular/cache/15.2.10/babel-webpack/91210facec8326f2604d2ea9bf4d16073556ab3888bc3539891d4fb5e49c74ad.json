{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../navbar/navbar.component\";\nfunction TaskComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction TaskComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_div_25_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.task.statut = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const radio_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", \"statut\")(\"value\", radio_r3)(\"ngModel\", ctx_r2.task.statut);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.mapStatutValue(radio_r3));\n  }\n}\nexport class TaskComponent {\n  constructor(taskService, router, route) {\n    this.taskService = taskService;\n    this.router = router;\n    this.route = route;\n    this.task = {\n      name: '',\n      description: '',\n      created_at: new Date(),\n      due_date: new Date()\n    };\n    this.statuts = ['to_do', 'in_progress', 'finished'];\n  }\n  ngOnInit() {\n    this.getTask();\n  }\n  mapStatutValue(value) {\n    switch (value) {\n      case 'to_do':\n        return 'A faire';\n      case 'in_progress':\n        return 'En cours';\n      case 'finished':\n        return 'Terminer';\n      default:\n        return '';\n    }\n  }\n  getTask() {\n    let id = this.route.snapshot.queryParamMap.get('taskId');\n    if (id !== null) {\n      this.taskId = +id;\n    }\n    console.log(id);\n    this.taskService.getTaskById(this.taskId).subscribe({\n      next: response => {\n        this.task = response.data;\n        console.log(response);\n      }\n    });\n  }\n  updateTask() {\n    this.taskService.updateTask(this.task).subscribe({\n      next: response => {\n        console.log(response);\n        this.router.navigate(['/accueil']);\n      },\n      error: error => {\n        console.error(\"Une erreur s'est produite : \", error.error.error);\n        this.error = error.error.error;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function TaskComponent_Factory(t) {\n    return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskComponent,\n    selectors: [[\"app-task\"]],\n    decls: 35,\n    vars: 9,\n    consts: [[1, \"vh-100\", \"bg-image\"], [1, \"mask\", \"d-flex\", \"align-items-center\", \"h-100\", \"gradient-custom-3\"], [1, \"container\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-9\", \"col-lg-7\", \"col-xl-6\"], [\"class\", \"font-weight-bold text-danger\", 4, \"ngIf\"], [1, \"card\", 2, \"border-radius\", \"15px\"], [1, \"card-body\", \"p-5\"], [1, \"text-uppercase\", \"text-center\", \"mb-5\"], [\"name\", \"newTask\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"description\", \"id\", \"name\", \"name\", \"description\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"for\", \"statut\", 1, \"form-label\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"due_date\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"due_date\", \"name\", \"due_date\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-block\", \"btn-lg\", \"gradient-custom-4\", \"text-body\"], [1, \"font-weight-bold\", \"text-danger\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"ngModel\", \"ngModelChange\"], [1, \"ml-4\"]],\n    template: function TaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"section\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵtemplate(7, TaskComponent_div_7_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"h2\", 8);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"form\", 9, 10);\n        i0.ɵɵlistener(\"ngSubmit\", function TaskComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.updateTask();\n        });\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Nom de la t\\u00E2che\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.task.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Description de la t\\u00E2che\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.task.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 11)(23, \"label\", 16);\n        i0.ɵɵtext(24, \"Statut de la t\\u00E2che\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, TaskComponent_div_25_Template, 4, 4, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 11)(27, \"label\", 18);\n        i0.ɵɵtext(28, \"Date d'\\u00E9ch\\u00E9ance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.task.due_date = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 20)(31, \"button\", 21);\n        i0.ɵɵtext(32, \"Modifier\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(33, \"br\")(34, \"br\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.task.name);\n        i0.ɵɵadvance(6);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.task.name);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.task.description);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.statuts);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.task.due_date);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.due_date);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i5.NavbarComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","TaskComponent","constructor","taskService","router","route","name","description","created_at","Date","due_date","ngOnInit","getTask","mapStatutValue","value","id","snapshot","queryParamMap","get","taskId","console","log","getTaskById","subscribe","next","response","task","data","updateTask","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\testJPM\\frontend\\todo\\src\\app\\task\\task.component.html","D:\\testJPM\\frontend\\todo\\src\\app\\task\\task.component.ts"],"sourcesContent":["<app-navbar></app-navbar>\n<section class=\"vh-100 bg-image\">\n  <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n            <br>\n            <div *ngIf=\"error\" class=\"font-weight-bold text-danger\">{{error}}</div>\n          <div class=\"card\" style=\"border-radius: 15px;\">\n            <div class=\"card-body p-5\">\n              <h2 class=\"text-uppercase text-center mb-5\">{{task.name}}</h2>\n              <form name=\"newTask\" #f=\"ngForm\" (ngSubmit)=\"updateTask()\">\n                <div class=\"form-outline mb-4\">\n                  <label class=\"form-label\" for=\"name\">Nom de la tâche</label>\n                  <input type=\"text\" id=\"name\"  [(ngModel)]=\"task.name\" name=\"name\" placeholder=\"{{task.name}}\" class=\"form-control form-control-lg\" />\n                </div>\n    \n                <div class=\"form-outline mb-4\">\n                  <label class=\"form-label\" for=\"description\">Description de la tâche</label>\n                  <input type=\"text\" id=\"description\"  id=\"name\" [(ngModel)]=\"task.description\" placeholder=\"{{task.description}}\" name=\"description\"  class=\"form-control form-control-lg\" />\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                    <label class=\"form-label\" for=\"statut\">Statut de la tâche</label>\n                    <div *ngFor=\"let radio of statuts\">\n                      <input type=\"radio\" [name]=\"'statut'\" [value]=\"radio\"  [(ngModel)]=\"task.statut\"/>\n                      <span class=\"ml-4\">{{ mapStatutValue(radio) }}</span>\n                    </div>\n                </div>\n                  \n                      \n                <div class=\"form-outline mb-4\">\n                  <label class=\"form-label\" for=\"due_date\">Date d'échéance</label>\n                  <input type=\"date\" id=\"due_date\" [(ngModel)]=\"task.due_date\" name=\"due_date\" placeholder=\"{{task.due_date}}\" class=\"form-control form-control-lg\" />\n                </div>\n    \n                \n                <div class=\"d-flex justify-content-center\">\n                  <button type=\"submit\"\n                    class=\"btn btn-success btn-block btn-lg gradient-custom-4 text-body\">Modifier</button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <br><br>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component } from '@angular/core';\nimport { Task } from '../model';\nimport { TaskService } from '../_services/task.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css'],\n})\nexport class TaskComponent {\n  task: Task = {\n    name: '',\n    description: '',\n    created_at: new Date(),\n    due_date: new Date(),\n  };\n  taskId!: number;\n  statuts = ['to_do', 'in_progress', 'finished'];\n  error: any;\n\n  constructor(\n    private taskService: TaskService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n  ngOnInit(): void {\n    this.getTask();\n  }\n\n  mapStatutValue(value: any): string {\n    switch (value) {\n      case 'to_do':\n        return 'A faire';\n      case 'in_progress':\n        return 'En cours';\n      case 'finished':\n        return 'Terminer';\n      default:\n        return '';\n    }\n  }\n  getTask() {\n    let id = this.route.snapshot.queryParamMap.get('taskId');\n    if (id !== null) {\n      this.taskId = +id;\n    }\n    console.log(id);\n\n    this.taskService.getTaskById(this.taskId).subscribe({\n      next: (response: any) => {\n        this.task = response.data;\n        console.log(response);\n      },\n    });\n  }\n\n  updateTask() {\n    this.taskService.updateTask(this.task).subscribe({\n      next: (response) => {\n        console.log(response);\n        this.router.navigate(['/accueil']);\n      },\n      error: (error: any) => {\n        console.error(\"Une erreur s'est produite : \", error.error.error);\n        this.error = error.error.error;\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}